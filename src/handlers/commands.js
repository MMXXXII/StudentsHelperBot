const { User, Group, UserGroup } = require("../database/models")
const { getMainKeyboard, getGroupSelectionKeyboard } = require("../utils/keyboards")
const { getUserState, setUserState, clearUserState } = require("../utils/userState")

function setupCommands(bot) {
  // –ö–æ–º–∞–Ω–¥–∞ /start
  bot.onText(/\/start/, async (msg) => {
    const chatId = msg.chat.id
    const telegramId = msg.from.id

    try {
      console.log(`–ö–æ–º–∞–Ω–¥–∞ /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${telegramId}`)

      // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      let user = await User.findOne({ where: { telegram_id: telegramId } })

      if (!user) {
        console.log("–°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
        user = await User.create({
          telegram_id: telegramId,
          username: msg.from.username,
          first_name: msg.from.first_name,
          last_name: msg.from.last_name,
        })
      }

      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º
      if (telegramId.toString() === process.env.ADMIN_TELEGRAM_ID) {
        await user.update({ role: "admin" })
        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–∑–Ω–∞—á–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º")
      }

      const welcomeMessage = `–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${msg.from.first_name}! üëã\n\n–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É –¥–ª—è —Ä–∞–±–æ—Ç—ã:`

      const keyboard = await getGroupSelectionKeyboard(user.id)

      await bot.sendMessage(chatId, welcomeMessage, {
        reply_markup: keyboard,
      })
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /start:", error)
      await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    }
  })

  // –ö–æ–º–∞–Ω–¥–∞ /cancel
  bot.onText(/\/cancel/, async (msg) => {
    const chatId = msg.chat.id
    const telegramId = msg.from.id

    try {
      clearUserState(telegramId)

      await bot.sendMessage(chatId, "–î–µ–π—Å—Ç–≤–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ.", {
        reply_markup: { remove_keyboard: true },
      })

      // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫ –≤—ã–±–æ—Ä—É –≥—Ä—É–ø–ø—ã
      setTimeout(async () => {
        const user = await User.findOne({ where: { telegram_id: telegramId } })
        if (user) {
          const keyboard = await getGroupSelectionKeyboard(user.id)
          await bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—É:", {
            reply_markup: keyboard,
          })
        }
      }, 500)
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /cancel:", error)
      await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
    }
  })

  // –ö–æ–º–∞–Ω–¥–∞ /admin (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)
  bot.onText(/\/admin/, async (msg) => {
    const chatId = msg.chat.id
    const telegramId = msg.from.id

    try {
      const user = await User.findOne({ where: { telegram_id: telegramId } })

      if (!user || user.role !== "admin") {
        await bot.sendMessage(chatId, "–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return
      }

      // –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ - –æ—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –≤—ã–∑–æ–≤
      const adminKeyboard = {
        inline_keyboard: [
          [{ text: "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–æ–ª—è–º–∏", callback_data: "admin_roles" }],
          [{ text: "üìù –ó–∞—è–≤–∫–∏ –Ω–∞ –≥—Ä—É–ø–ø—ã", callback_data: "admin_group_requests" }],
          [{ text: "üîô –ù–∞–∑–∞–¥", callback_data: "back_to_groups" }],
        ],
      }

      await bot.sendMessage(chatId, "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞:", {
        reply_markup: adminKeyboard,
      })
    } catch (error) {
      console.error("–û—à–∏–±–∫–∞ –≤ –∫–æ–º–∞–Ω–¥–µ /admin:", error)
      await bot.sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.")
    }
  })

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
  bot.on("message", async (msg) => {
    if (msg.text && !msg.text.startsWith("/")) {
      const chatId = msg.chat.id
      const telegramId = msg.from.id
      const userState = getUserState(telegramId)

      if (userState) {
        console.log(`–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –≤–≤–æ–¥–∞ –æ—Ç ${telegramId}:`, msg.text)
        const { handleTextInput } = require("./textHandlers")
        await handleTextInput(bot, msg, userState)
      }
    }
  })
}

module.exports = { setupCommands }
